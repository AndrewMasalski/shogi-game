<UserControl x:Class="Yasc.Gui.Game.GameView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Moves="clr-namespace:Yasc.ShogiCore.Moves;assembly=Yasc.ShogiCore"
             xmlns:controls="clr-namespace:Yasc.Controls;assembly=Yasc.BoardControl"
             xmlns:gui="clr-namespace:Yasc.Gui"
             xmlns:Common="clr-namespace:Yasc.Common;assembly=Yasc.BoardControl"
             xmlns:Yasc="clr-namespace:Yasc"
             Loaded="UserControl_Loaded">

  <UserControl.Resources>
    <DataTemplate x:Key="Timers">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Line Stretch="Fill" StrokeThickness="1" Stroke="Black" 
              VerticalAlignment="Stretch" Y1="1" HorizontalAlignment="Right" SnapsToDevicePixels="True"/>

        <UniformGrid Margin="0, 3" Columns="2" Grid.ColumnSpan="2">
          <Grid Margin="3, 0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="5"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Common:ProgressClock IsEnabled="{Binding IsMyTimerLaunched, Mode=OneWay}" 
                                Width="32" Height="32" Grid.RowSpan="2"/>

            <TextBlock Name="MyName" Text="{Binding Ticket.Me.Name, Mode=OneTime}" Grid.Column="2"/>
            <Common:StopwatchControl Value="{Binding MyTime, Mode=TwoWay}" 
                                 RefreshInterval="00:00:00.9"
                                 IsLaunched="{Binding IsMyTimerLaunched, Mode=OneWay}" 
                                 Direction="Backward" Grid.Column="2" Grid.Row="1"/>
          </Grid>
          <Grid HorizontalAlignment="Right" Margin="3, 0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="10"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="5"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Common:ProgressClock IsEnabled="{Binding IsOpponentTimerLaunched, Mode=OneWay}" 
                                  Width="32" Height="32" Grid.RowSpan="2" Grid.Column="3" />

            <TextBlock Name="OpponentName" Text="{Binding Ticket.Opponent.Name, Mode=OneTime}" 
                       Grid.Column="1" HorizontalAlignment="Right" />
            
            <Common:StopwatchControl Value="{Binding OpponentTime, Mode=TwoWay}" 
                                     RefreshInterval="00:00:00.9" HorizontalAlignment="Right"
                                     IsLaunched="{Binding IsOpponentTimerLaunched, Mode=OneWay}"
                                     Direction="Backward" Grid.Column="1" Grid.Row="1"/>
          </Grid>
        </UniformGrid>
      </Grid>
    </DataTemplate>
  </UserControl.Resources>
  <DockPanel LastChildFill="True">
    <Menu DockPanel.Dock="Top">
      <MenuItem Header="File">
        <MenuItem Header="Load Transcript"  Command="{Binding LoadTranscriptCommand}" />
      </MenuItem>
      <MenuItem Header="Board">
        <MenuItem Header="Leave" Command="{Binding GetBackCommand}" />
        <MenuItem Header="Clean" Command="{Binding CleanBoardCommand}" />
        <MenuItem Header="Enforce rules" IsCheckable="True"
                  IsChecked="{Binding ElementName=board, Path=AreMoveRulesEnforced}"  />
      </MenuItem>
      <MenuItem Header="Skins" ItemsSource="{Binding AvailableSkins}"
                DataContext="{x:Static gui:SkinningViewModel.Instance}" >
        <MenuItem.ItemContainerStyle>
          <Style TargetType="MenuItem">
            <Setter Property="Header" Value="{Binding Name}"/>
            <Setter Property="IsChecked" Value="{Binding IsSelected}"/>
            <Setter Property="Command" Value="{Binding LoadCommand}"/>
          </Style>
        </MenuItem.ItemContainerStyle>
      </MenuItem>
    </Menu>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto" MinWidth="100"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <controls:ShogiBoard x:Name="board" MoveAttempt="OnMoveAttempt" 
                           Board="{Binding Board}" 
                           IsFlipped="{Binding IsFlipped}"/>

      <Grid Grid.Column="1">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource Timers}"/>

        <TabControl Grid.Row="1" MaxWidth="300">
          <TabItem Header="Moves">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <ListBox x:Name="_listBox" ItemsSource="{Binding MovesAndComments}"
                       SelectedItem="{Binding Board.History.CurrentMove}">
                <ItemsControl.Resources>
                  <DataTemplate DataType="{x:Type Moves:ResignMove}">
                    <StackPanel Orientation="Horizontal" Margin="5,2">
                      <TextBlock Text="{Binding Number}"/>
                      <TextBlock Text=". "/>
                      <TextBlock Text="Resign" Foreground="Red"/>
                    </StackPanel>
                  </DataTemplate>
                  <DataTemplate DataType="{x:Type Moves:MoveBase}">
                    <StackPanel Orientation="Horizontal" Margin="5,2">
                      <TextBlock Text="{Binding Number}"/>
                      <TextBlock Text=". "/>
                      <TextBlock Text="{Binding}"/>
                    </StackPanel>
                  </DataTemplate>
                  <DataTemplate DataType="{x:Type gui:ChatMessage}">
                    <StackPanel Orientation="Horizontal" Margin="5,5" TextElement.Foreground="Green" >
                      <TextBlock Text="{Binding Timestamp, StringFormat=HH:mm:ss}" />
                      <TextBlock Text=" "/>
                      <TextBlock Text="{Binding Owner}" FontWeight="Bold"/>
                      <TextBlock Text=": "/>
                      <TextBlock Text="{Binding Message}" TextWrapping="Wrap" Foreground="Blue"/>
                    </StackPanel>
                  </DataTemplate>
                </ItemsControl.Resources>
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <Common:MovesAndCommentsGrid/>
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
              </ListBox>
              <TextBox Grid.Row="1" Margin="0,3,0,0" TextWrapping="Wrap"
                       Text="{Binding CurrentMessage, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.CommandBindings>
                  <CommandBinding Command="{x:Static Yasc:ChatCommands.SendMessage}"
                                  Executed="CommandBinding_Executed"/>
                </TextBox.CommandBindings>
                <TextBox.InputBindings>
                  <KeyBinding Key="Return" Command="{x:Static Yasc:ChatCommands.SendMessage}" />
                </TextBox.InputBindings>

              </TextBox>
            </Grid>

          </TabItem>
        </TabControl>
      </Grid>
      <TextBlock x:Name="_errorLabel" Grid.Row="2" Grid.ColumnSpan="2"/>
    </Grid>
  </DockPanel>

</UserControl>
