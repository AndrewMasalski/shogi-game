<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:Common="clr-namespace:Yasc.BoardControl.Common" 
                    xmlns:Controls="clr-namespace:Yasc.BoardControl.Controls" 
                    xmlns:ShogiCore="clr-namespace:Yasc.ShogiCore;assembly=Yasc.ShogiCore">

  <!--  Converters  -->
  <Common:DebugConverter x:Key="DebugConverter"/>
  <Common:ToStringConverter x:Key="ToStirngConverter"/>

  <!--  IsFlipped ButtonStyle  -->
  <Style x:Key="IsFlippedButtonStyle" TargetType="{x:Type CheckBox}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Border Name="Border" CornerRadius="6" Background="Transparent">
            <Image Name="Image" Source="/Yasc.BoardControl;component/Resources/Rotate.png" Width="22"
                   RenderOptions.BitmapScalingMode="NearestNeighbor">
              <Image.RenderTransform>
                <RotateTransform x:Name="Rotate" CenterX="11" CenterY="11"/>
              </Image.RenderTransform>
            </Image>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <BeginStoryboard.Storyboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="Image"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).Angle"
                                       To="180" Duration="0:0:0.2" />
                    </Storyboard>
                  </BeginStoryboard.Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <BeginStoryboard.Storyboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="Image"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).Angle"
                                       To="0" Duration="0:0:0.2" />
                    </Storyboard>
                  </BeginStoryboard.Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <BeginStoryboard.Storyboard>
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="Border"
                                      Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                      To="LightBlue" Duration="0:0:0.2" />
                    </Storyboard>
                  </BeginStoryboard.Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <BeginStoryboard.Storyboard>
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="Border"
                                      Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                      To="Transparent" Duration="0:0:0.2" />
                    </Storyboard>
                  </BeginStoryboard.Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ShogiBoard  -->
  <Style TargetType="{x:Type Controls:ShogiBoard}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:ShogiBoard}">
          <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="5*"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Controls:ShogiHand x:Name="TopHand" Color="White" Grid.Column="0" 
                             Board="{TemplateBinding Board}"
                             AutomationProperties.Name="TopHand"
                             VerticalAlignment="Top" HorizontalAlignment="Right"/>
            <Common:UniformPanel Grid.Column="1">
              <Controls:BoardBorder>
                <Grid>
                  <Controls:ShogiBoardCore Board="{TemplateBinding Board}"/>
                  <CheckBox VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-19,-21,0"
                            Style="{StaticResource IsFlippedButtonStyle}"
                            IsChecked="{Binding IsFlipped, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid>
              </Controls:BoardBorder>
            </Common:UniformPanel>

            <Controls:ShogiHand x:Name="BottomHand" Color="Black" Grid.Column="2" 
                             Board="{TemplateBinding Board}"
                             AutomationProperties.Name="BottomHand"
                             VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
            <Canvas Name="PART_AdornerLayer"/>
            <Rectangle Fill="#3333" Visibility="Collapsed" Name="Shield" Grid.ColumnSpan="3"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFlipped" Value="True">
              <Setter TargetName="TopHand" Property="Color" Value="Black"/>
              <Setter TargetName="BottomHand" Property="Color" Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Shield" Property="Visibility" Value="Visible"/> 
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ShogiHand  -->
  <Style TargetType="{x:Type Controls:ShogiHand}">
    <Setter Property="GroupingMode" Value="Groups"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:ShogiHand}">
          <ItemsControl ItemsSource="{TemplateBinding Items}">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <UniformGrid Columns="2"/>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
          </ItemsControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ShogiPiece  -->
  <Style TargetType="{x:Type Controls:ShogiPiece}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:ShogiPiece}">
          <Grid  Background="Transparent">
            <Grid.ToolTip>
              <Common:SwitchControl Switcher="{Binding PieceType.Latin, Mode=OneTime, 
                                              RelativeSource={RelativeSource TemplatedParent}}">
                <Common:SwitchControl.Resources>
                  <DataTemplate x:Key="P">
                    <TextBlock Text="Pawn" TextOptions.TextRenderingMode="Grayscale"/>
                  </DataTemplate>
                </Common:SwitchControl.Resources>
              </Common:SwitchControl>
            </Grid.ToolTip>
            <Viewbox>
              <Grid Height="13" Width="13">
                <Grid Height="10" Width="10" RenderTransformOrigin=".5, .5" Name="_piece">
                  <Path Height="10" Width="10" Stroke="Black" StrokeThickness=".3" StrokeLineJoin="Round"
                        Data="M0.1,0.1 L2,9 5,9.9 8,9 9.9,0.1 z" Fill="yellow">
                    <Path.RenderTransform>
                      <RotateTransform CenterX="5" CenterY="5" Angle="180"/>
                    </Path.RenderTransform>
                  </Path>

                  <TextBlock Name="symbol" Text="{Binding PieceType, Mode=OneWay, 
                             Converter={StaticResource ToStirngConverter},
                             RelativeSource={RelativeSource TemplatedParent}}"
                             FontSize="7" FontFamily="MS Mincho" Margin="0,1,0,0" 
                             VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
              </Grid>
            </Viewbox>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPromoted" Value="True">
              <Setter TargetName="symbol" Property="Foreground" Value="Red"/>
            </Trigger>
            <Trigger Property="EffectiveDirection" Value="Downwards">
              <Setter TargetName="_piece" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ShogiCell  -->
  <Style TargetType="{x:Type Controls:ShogiCell}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:ShogiCell}">
          <Grid Background="Transparent" >
            <Rectangle Name="border" Stretch="Fill" SnapsToDevicePixels="True"/>
            <ContentPresenter/>
            <Rectangle Name="border1" Stretch="Fill" SnapsToDevicePixels="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPossibleMoveTarget" Value="True">
              <Setter TargetName="border" Property="Fill" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="IsMoveSource" Value="True">
              <Setter TargetName="border1" Property="Fill" Value="#FFF8C8FF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  HandNest  -->
  <Style TargetType="{x:Type Controls:HandNest}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:HandNest}">
          <Grid>
            <ContentPresenter/>
            <TextBlock Name="Index" HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                       Text="{Binding PiecesCount, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="EffectiveDirection" Value="Upwards">
              <Setter TargetName="Index" Property="VerticalAlignment" Value="Top"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  StopwatchControl  -->
  <Style TargetType="{x:Type Common:StopwatchControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Common:StopwatchControl}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <StackPanel Orientation="Horizontal">

              <TextBlock Text="{Binding Value.Minutes, RelativeSource={RelativeSource TemplatedParent}}"/>
              <TextBlock Text=":"/>
              <TextBlock Text="{Binding Value.Seconds, RelativeSource={RelativeSource TemplatedParent}}"/>
            </StackPanel>

          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ShogiBoardCore  -->
  <Style TargetType="{x:Type Controls:ShogiBoardCore}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:ShogiBoardCore}">
          <Grid>
            <ItemsControl ItemsSource="{TemplateBinding Cells}" >
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <UniformGrid Rows="9" Columns="9"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type ShogiCore:Cell}">
                  <Controls:ShogiCell Margin="1,1,0,0" Cell="{Binding}" />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  BoardBorder  -->
  <Style TargetType="{x:Type Controls:BoardBorder}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:BoardBorder}">
          <ControlTemplate.Resources>
            <Style x:Key="VerticalLine" TargetType="{x:Type Path}">
              <Setter Property="Grid.RowSpan" Value="9"/>
              <Setter Property="Grid.Row" Value="1"/>
              <Setter Property="Data" Value="M0,0 0,1"/>
              <Setter Property="Stretch" Value="Fill"/>
              <Setter Property="HorizontalAlignment" Value="Left"/>
              <Setter Property="Stroke" Value="#F999"/>
              <Setter Property="StrokeThickness" Value="1"/>
              <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style x:Key="HorizontalLine" TargetType="{x:Type Path}">
              <Setter Property="Grid.ColumnSpan" Value="9"/>
              <Setter Property="Grid.Column" Value="1"/>
              <Setter Property="Data" Value="M0,0 1,0"/>
              <Setter Property="Stretch" Value="Fill"/>
              <Setter Property="VerticalAlignment" Value="Top"/>
              <Setter Property="Stroke" Value="#F999"/>
              <Setter Property="StrokeThickness" Value="1"/>
              <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style x:Key="xT" TargetType="{x:Type TextBlock}">
              <Setter Property="Grid.Column" Value="10"/>
              <Setter Property="HorizontalAlignment" Value="Center"/>
              <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style x:Key="yT" TargetType="{x:Type TextBlock}">
              <Setter Property="Grid.Row" Value="0"/>
              <Setter Property="HorizontalAlignment" Value="Center"/>
              <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
          </ControlTemplate.Resources>
          <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
              <RowDefinition Height="15" />
              <RowDefinition Height="*" />
              <RowDefinition Height="*" />
              <RowDefinition Height="*" />
              <RowDefinition Height="*" />
              <RowDefinition Height="*" />
              <RowDefinition Height="*" />
              <RowDefinition Height="*" />
              <RowDefinition Height="*" />
              <RowDefinition Height="*" />
              <RowDefinition Height="15" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="15" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="15" />
            </Grid.ColumnDefinitions>

            <TextBlock Name="y1" Grid.Row="1" Text="a" Style="{StaticResource xT}"/>
            <TextBlock Name="y2" Grid.Row="2" Text="b" Style="{StaticResource xT}"/>
            <TextBlock Name="y3" Grid.Row="3" Text="c" Style="{StaticResource xT}"/>
            <TextBlock Name="y4" Grid.Row="4" Text="d" Style="{StaticResource xT}"/>
            <TextBlock Name="y5" Grid.Row="5" Text="e" Style="{StaticResource xT}"/>
            <TextBlock Name="y6" Grid.Row="6" Text="f" Style="{StaticResource xT}"/>
            <TextBlock Name="y7" Grid.Row="7" Text="g" Style="{StaticResource xT}"/>
            <TextBlock Name="y8" Grid.Row="8" Text="h" Style="{StaticResource xT}"/>
            <TextBlock Name="y9" Grid.Row="9" Text="i" Style="{StaticResource xT}"/>

            <TextBlock Name="x1" Grid.Column="9" Text="1" Style="{StaticResource yT}"/>
            <TextBlock Name="x2" Grid.Column="8" Text="2" Style="{StaticResource yT}"/>
            <TextBlock Name="x3" Grid.Column="7" Text="3" Style="{StaticResource yT}"/>
            <TextBlock Name="x4" Grid.Column="6" Text="4" Style="{StaticResource yT}"/>
            <TextBlock Name="x5" Grid.Column="5" Text="5" Style="{StaticResource yT}"/>
            <TextBlock Name="x6" Grid.Column="4" Text="6" Style="{StaticResource yT}"/>
            <TextBlock Name="x7" Grid.Column="3" Text="7" Style="{StaticResource yT}"/>
            <TextBlock Name="x8" Grid.Column="2" Text="8" Style="{StaticResource yT}"/>
            <TextBlock Name="x9" Grid.Column="1" Text="9" Style="{StaticResource yT}"/>

            <Path Style="{StaticResource VerticalLine}" Grid.Column="1"/>
            <Path Style="{StaticResource VerticalLine}" Grid.Column="2"/>
            <Path Style="{StaticResource VerticalLine}" Grid.Column="3"/>
            <Path Style="{StaticResource VerticalLine}" Grid.Column="4"/>
            <Path Style="{StaticResource VerticalLine}" Grid.Column="5"/>
            <Path Style="{StaticResource VerticalLine}" Grid.Column="6"/>
            <Path Style="{StaticResource VerticalLine}" Grid.Column="7"/>
            <Path Style="{StaticResource VerticalLine}" Grid.Column="8"/>
            <Path Style="{StaticResource VerticalLine}" Grid.Column="9"/>
            <Path Style="{StaticResource VerticalLine}" Grid.Column="10"/>

            <Path Style="{StaticResource HorizontalLine}" Grid.Row="1"/>
            <Path Style="{StaticResource HorizontalLine}" Grid.Row="2"/>
            <Path Style="{StaticResource HorizontalLine}" Grid.Row="3"/>
            <Path Style="{StaticResource HorizontalLine}" Grid.Row="4"/>
            <Path Style="{StaticResource HorizontalLine}" Grid.Row="5"/>
            <Path Style="{StaticResource HorizontalLine}" Grid.Row="6"/>
            <Path Style="{StaticResource HorizontalLine}" Grid.Row="7"/>
            <Path Style="{StaticResource HorizontalLine}" Grid.Row="8"/>
            <Path Style="{StaticResource HorizontalLine}" Grid.Row="9"/>
            <Path Style="{StaticResource HorizontalLine}" Grid.Row="10"/>

            <ContentPresenter Grid.Row="1" Grid.Column="1" Grid.RowSpan="9" Grid.ColumnSpan="9"
                              SnapsToDevicePixels="True" />

            <Grid Grid.Row="1" Grid.Column="1" Grid.RowSpan="9" Grid.ColumnSpan="9"
                  SnapsToDevicePixels="True" Margin="0,0,-1,-1">
              <Border BorderThickness="2" BorderBrush="DarkRed"/>
              <Viewbox>
                <Grid Width="80" Height="80" >
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Ellipse Grid.Row="2" Grid.Column="2" Grid.RowSpan="2" Grid.ColumnSpan="2" Fill="Black" Width="1" Height="1"/>
                  <Ellipse Grid.Row="5" Grid.Column="2" Grid.RowSpan="2" Grid.ColumnSpan="2" Fill="Black" Width="1" Height="1"/>
                  <Ellipse Grid.Row="2" Grid.Column="5" Grid.RowSpan="2" Grid.ColumnSpan="2" Fill="Black" Width="1" Height="1"/>
                  <Ellipse Grid.Row="5" Grid.Column="5" Grid.RowSpan="2" Grid.ColumnSpan="2" Fill="Black" Width="1" Height="1"/>
                </Grid>
              </Viewbox>
            </Grid>

          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFlipped" Value="True">
              <Setter TargetName="x1" Property="Text" Value="9"/>
              <Setter TargetName="x2" Property="Text" Value="8"/>
              <Setter TargetName="x3" Property="Text" Value="7"/>
              <Setter TargetName="x4" Property="Text" Value="6"/>
              <Setter TargetName="x5" Property="Text" Value="5"/>
              <Setter TargetName="x6" Property="Text" Value="4"/>
              <Setter TargetName="x7" Property="Text" Value="3"/>
              <Setter TargetName="x8" Property="Text" Value="2"/>
              <Setter TargetName="x9" Property="Text" Value="1"/>

              <Setter TargetName="y1" Property="Text" Value="i"/>
              <Setter TargetName="y2" Property="Text" Value="h"/>
              <Setter TargetName="y3" Property="Text" Value="g"/>
              <Setter TargetName="y4" Property="Text" Value="f"/>
              <Setter TargetName="y5" Property="Text" Value="e"/>
              <Setter TargetName="y6" Property="Text" Value="d"/>
              <Setter TargetName="y7" Property="Text" Value="c"/>
              <Setter TargetName="y8" Property="Text" Value="b"/>
              <Setter TargetName="y9" Property="Text" Value="a"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ProgressClock  -->
  <Style TargetType="{x:Type Common:ProgressClock}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Common:ProgressClock}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="OnLoadedStoryboard" AutoReverse="False" RepeatBehavior="Forever">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="line" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:06" Value="360"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="line1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="110"/>
                <SplineDoubleKeyFrame KeyTime="00:00:06" Value="1190"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
              <BeginStoryboard Name="BeginSt" Storyboard="{StaticResource OnLoadedStoryboard}"/>
              <PauseStoryboard BeginStoryboardName="BeginSt"/>
            </EventTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Trigger.EnterActions>
                <PauseStoryboard BeginStoryboardName="BeginSt"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <ResumeStoryboard BeginStoryboardName="BeginSt"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
          <Viewbox>
            <Grid x:Name="LayoutRoot" Width="100" Height="100">
              <Ellipse Stroke="#FF961D1D" StrokeThickness="6"/>
              <Line x:Name="line" Height="30" Stretch="Fill" StrokeThickness="6" Stroke="#FF41330F"
                    VerticalAlignment="Top" Y1="1" Margin="0,20,0,0" 
                    RenderTransformOrigin="0.5,1" StrokeEndLineCap="Triangle" StrokeStartLineCap="Round" >
                <Line.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                  </TransformGroup>
                </Line.RenderTransform>
              </Line>
              <Line x:Name="line1" Height="42" Stretch="Fill" StrokeThickness="4" Stroke="#FF41330F"
                    VerticalAlignment="Top" Y1="1" Margin="0,8,0,0" RenderTransformOrigin="0.5,1"
                    StrokeEndLineCap="Triangle" StrokeStartLineCap="Round" >
                <Line.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                  </TransformGroup>
                </Line.RenderTransform>
              </Line>
              <Ellipse Margin="44" Fill="Black"/>
            </Grid>
          </Viewbox>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
